{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?fbe4","webpack:///./src/language/StatementId.ts","webpack:///./src/puzzles/Cell.ts","webpack:///./src/puzzles/Tile.ts","webpack:///./src/puzzles/Edge.ts","webpack:///./src/puzzles/Corner.ts","webpack:///./src/puzzles/Puzzle.ts","webpack:///./src/language/types/AbstractType.ts","webpack:///./src/language/types/LanguageType.ts","webpack:///./src/language/types/BooleanType.ts","webpack:///./src/puzzles/instances/slitherlink/SlitherlinkRule.ts","webpack:///./src/language/types/True.ts","webpack:///./src/language/types/False.ts","webpack:///./src/language/AbstractStatement.ts","webpack:///./src/language/AbstractExpression.ts","webpack:///./src/language/BinaryExpression.ts","webpack:///./src/language/lists/ForEachTile.ts","webpack:///./src/language/errors/LangTypeError.ts","webpack:///./src/language/logic/Eq.ts","webpack:///./src/language/types/NumberType.ts","webpack:///./src/language/functions/FunctionExpression.ts","webpack:///./src/language/functions/NullaryFunction.ts","webpack:///./src/language/functions/tile/TileEdgeCountFunction.ts","webpack:///./src/language/functions/tile/TileValueFunction.ts","webpack:///./src/language/lists/filters/Filter.ts","webpack:///./src/language/lists/filters/TileHasNumericValueFilter.ts","webpack:///./src/language/lists/filters/AllFilter.ts","webpack:///./src/language/literals/AbstractLiteral.ts","webpack:///./src/language/literals/NumberLiteral.ts","webpack:///./src/language/lists/ForEachCorner.ts","webpack:///./src/language/logic/Or.ts","webpack:///./src/language/functions/corner/CornerEdgeCountFunction.ts","webpack:///./src/puzzles/PuzzleRule.ts","webpack:///./src/puzzles/interface/EdgeClickedAction.ts","webpack:///./src/puzzles/interface/TileClickedAction.ts","webpack:///./src/language/functions/edge/EdgeGroupCountFunction.ts","webpack:///./src/puzzles/instances/slitherlink/Slitherlink.ts","webpack:///./src/puzzles/PuzzleInterfaceMode.ts","webpack:///./src/puzzles/commands/CommandHistory.ts","webpack:///./src/puzzles/commands/AbstractCommand.ts","webpack:///./src/puzzles/commands/ToggleEdgeCommand.ts","webpack:///./src/puzzles/commands/ToggleDisableEdgeCommand.ts","webpack:///./src/puzzles/commands/CycleThroughTileValuesCommand.ts","webpack:///./src/puzzles/PuzzleInterface.ts","webpack:///./src/components/PuzzleInterfaceComponent.vue?2cae","webpack:///./src/components/PuzzleComponent.vue?e05b","webpack:///./src/components/TileComponent.vue?226d","webpack:///./src/components/TileComponent.vue","webpack:///./src/components/TileComponent.vue?ddcf","webpack:///./src/components/EdgeComponent.vue?c132","webpack:///./src/components/EdgeComponent.vue","webpack:///./src/components/EdgeComponent.vue?dcc1","webpack:///./src/components/CornerComponent.vue?17c4","webpack:///./src/components/CornerComponent.vue","webpack:///./src/components/CornerComponent.vue?f58f","webpack:///./src/components/PuzzleComponent.vue","webpack:///./src/components/PuzzleComponent.vue?1e8c","webpack:///./src/components/PuzzleInterfaceComponent.vue","webpack:///./src/components/PuzzleInterfaceComponent.vue?a47c","webpack:///./src/App.vue","webpack:///./src/App.vue?8ecf","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_hoisted_1","class","_hoisted_2","render","_ctx","_cache","$props","$setup","$data","$options","_component_puzzle_interface_component","_resolveComponent","_openBlock","_createElementBlock","_createElementVNode","_createVNode","puzzleInterface","StatementId","Cell","_isLocked","_isDisabled","this","_value","Tile","allowedValues","northEastCorner","southEastCorner","southWestCorner","northWestCorner","northEdge","eastEdge","southEdge","westEdge","Edge","isHorizontal","firstCorner","secondCorner","firstTile","secondTile","filter","tile","undefined","Corner","edge","getNeighbouringEdges","northEastTile","southEastTile","southWestTile","northWestTile","Puzzle","instanceConfig","puzzleConfig","rules","grid","description","setRules","height","width","gridHeight","gridWidth","initializeGrid","tileClues","loadTileClues","clues","forEach","tileClue","getTile","x","y","setValue","row","tileValues","corner","getCell","id","rule","find","index","indexOf","isSatisfied","puzzle","isLocked","isDisabled","toggle","toggleDisabled","number","tiles","corners","getCorner","edges","res","Number","isFinite","join","tuples","split","tuple","replace","values","parseInt","LanguageType","AbstractType","SlitherlinkRule","BooleanType","type","BOOLEAN","True","False","AbstractStatement","AbstractExpression","BinaryExpression","left","right","ForEachTile","where","expr","memory","getTiles","evaluate","LangTypeError","Error","Eq","NumberType","NUMBER","FunctionExpression","NullaryFunction","TileEdgeCountFunction","PuzzleDataNotSetError","sum","TileValueFunction","Filter","TileHasNumericValueFilter","AllFilter","AbstractLiteral","toString","NumberLiteral","ForEachCorner","getCorners","Or","CornerEdgeCountFunction","PuzzleRule","EdgeClickedAction","TileClickedAction","EdgeGroupCountFunction","activeEdges","getEdges","groups","visited","queue","current","firstNeighbours","getActiveNeighbouringEdges","secondNeighbours","neighbours","neighbour","includes","PuzzleInterfaceMode","Slitherlink","TileValueEqualsEdgeCount","EdgeCornerCountIsEven","SingleLoop","solvingConfig","edgeLeftClicked","ToggleEdgeValue","edgeRightClicked","ToggleEdgeDisabled","editingConfig","tileLeftClicked","CycleThroughValues","exportTiles","console","log","importTiles","CommandHistory","_index","_commands","command","do","truncateFutureCommands","warn","undo","AbstractCommand","_puzzle","ToggleEdgeCommand","_edge","ToggleDisableEdgeCommand","CycleThroughTileValuesCommand","_tile","_oldValue","next","nextValue","PuzzleInterface","config","loadConfig","commands","Solving","action","tileRightClicked","puzzleData","export","Editing","import","redo","_hoisted_3","_hoisted_4","_component_puzzle_component","onEdgeLeft","onEdgeRight","onTileLeft","onTileRight","onClick","_Fragment","_renderList","_toDisplayString","_createCommentVNode","isSolved","exportPuzzle","_withDirectives","$event","exportValue","_vModelText","importPuzzle","switchMode","isSolving","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_component_corner_component","_component_tile_component","_component_edge_component","onContextmenu","_withModifiers","cell","_createBlock","onCorner","cornerClicked","onTile","tileClicked","leftClick","rightClick","defineComponent","props","required","methods","$parent","$emit","__exports__","_normalizeClass","dimensions","edgeColor","computed","click","cornerColor","components","CornerComponent","EdgeComponent","TileComponent","checkIsSolved","setTileValue","toggleCorner","PuzzleComponent","isEditing","reverse","alert","performEdgeClickAction","performTileClickAction","PuzzleInterfaceComponent","createApp","App","mount"],"mappings":"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","file":"js/app.60560ef9.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/puzzles/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"flex flex-col justify-center\" }\nconst _hoisted_2 = { class: \"flex flex-row justify-center\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_puzzle_interface_component = _resolveComponent(\"puzzle-interface-component\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_puzzle_interface_component, { \"puzzle-interface\": _ctx.puzzleInterface }, null, 8, [\"puzzle-interface\"])\n    ])\n  ]))\n}","export enum StatementId {\n\n    // Literals\n    BooleanLiteral = 'boolean-literal',\n    NumberLiteral = 'number-literal',\n    NoneLiteral = 'none-literal',\n    StringLiteral = 'string-literal',\n\n    // Memory\n    VariableExpression = 'variable-expression',\n    AssignVariable = 'assign-variable',\n\n    // Logic\n    Eq = 'eq',\n    Or = 'or',\n    Gt = 'gt',\n\n    // Lists\n    ForEachTile = 'for-each-tile',\n    ForEachCorner = 'for-each-corner',\n\n    // Filters\n    AllFilter = 'all',\n    NoneFilter = 'none',\n    TileHasNumericValueFilter = 'tile-has-numeric-value',\n    EdgeIsActiveFilter = 'edge-is-active',\n\n    // Statements\n    IfStatement = \"if-statement\",\n    BlockStatement = \"block-statement\",\n\n    // Arithmetic\n    Add = 'add',\n\n    // Functions\n    TileValueFunction = 'tile-value',\n    TileEdgeCountFunction = 'tile-edge-count',\n    CornerEdgeCountFunction = 'corner-edge-count',\n    EdgeGroupCountFunction = 'edge-group-count',\n\n}\n","export abstract class Cell {\n    protected _value: any;\n\n    /**\n     * Locked cells are part of the given problem, and can not be changed\n     */\n    protected _isLocked = false;\n\n    /**\n     * Disabled cells are marked as incomplete, not part of the solution\n     */\n    protected _isDisabled = false;\n\n\n    get value(): any {\n        return this._value;\n    }\n\n    setValue(value: any): this {\n        if (this._isLocked || this._isDisabled) {\n            return this;\n        }\n        this._value = value;\n        return this;\n    }\n\n    get isLocked(): boolean {\n        return this._isLocked\n    }\n\n    setIsLocked(value = true): this {\n        this._isLocked = value;\n        return this\n    }\n\n    toggleLock(): this {\n        this._isLocked = !this._isLocked;\n        return this;\n    }\n\n    get isDisabled(): boolean {\n        return this._isDisabled\n    }\n\n    setIsDisabled(value = true): this {\n        this._isDisabled = value;\n        return this\n    }\n\n    toggleDisabled(): this {\n        this._isDisabled = !this._isDisabled;\n        return this;\n    }\n\n}\n","import {Corner} from \"@/puzzles/Corner\";\nimport {Edge} from \"@/puzzles/Edge\";\nimport {Cell} from \"@/puzzles/Cell\";\n\nexport class Tile extends Cell {\n\n    allowedValues: any[];\n\n    constructor(allowedValues: any[]) {\n        super();\n        this._value = '';\n        this.allowedValues = allowedValues;\n    }\n\n    northEastCorner!: Corner\n    southEastCorner!: Corner\n    southWestCorner!: Corner\n    northWestCorner!: Corner\n\n    getNeighbouringCorners(): Corner[] {\n        return [\n            this.northEastCorner,\n            this.southEastCorner,\n            this.southWestCorner,\n            this.northWestCorner,\n        ];\n    }\n\n    northEdge!: Edge;\n    eastEdge!: Edge;\n    southEdge!: Edge;\n    westEdge!: Edge;\n\n    getNeighbouringEdges(): Edge[] {\n        return [\n            this.northEdge,\n            this.eastEdge,\n            this.southEdge,\n            this.westEdge,\n        ];\n    }\n}\n","import {Corner} from \"@/puzzles/Corner\";\nimport {Tile} from \"@/puzzles/Tile\";\nimport {Cell} from \"@/puzzles/Cell\";\n\nexport class Edge extends Cell {\n    isHorizontal: boolean;\n\n    constructor(isHorizontal: boolean) {\n        super();\n        this.isHorizontal = isHorizontal;\n    }\n\n    toggle(): void {\n        this._value = !this._value;\n    }\n\n    firstCorner!: Corner\n    secondCorner!: Corner\n\n    getNeighbouringCorners(): Corner[] {\n        return [\n            this.firstCorner,\n            this.secondCorner,\n        ];\n    }\n\n    firstTile?: Tile\n    secondTile?: Tile\n\n    getNeighbouringTiles(): Tile[] {\n        return [\n            this.firstTile,\n            this.secondTile,\n        ].filter(tile => {\n            return tile != undefined;\n        }) as Tile[];\n    }\n\n}\n","import {Edge} from \"@/puzzles/Edge\";\nimport {Tile} from \"@/puzzles/Tile\";\nimport {Cell} from \"@/puzzles/Cell\";\n\nexport class Corner extends Cell {\n\n    toggle(): void {\n        this._value = !this._value;\n    }\n\n    northEdge?: Edge;\n    eastEdge?: Edge;\n    southEdge?: Edge;\n    westEdge?: Edge;\n\n\n    getNeighbouringEdges(): Edge[] {\n        return [\n            this.northEdge,\n            this.eastEdge,\n            this.southEdge,\n            this.westEdge,\n        ].filter(edge => {\n            return edge != undefined;\n        }) as Edge[];\n    }\n\n    getActiveNeighbouringEdges(): Edge[] {\n        return this.getNeighbouringEdges().filter(edge => {\n            return edge.value === true;\n        })\n    }\n\n    northEastTile?: Tile\n    southEastTile?: Tile\n    southWestTile?: Tile\n    northWestTile?: Tile\n\n    getNeighbouringTiles(): Tile[] {\n        return [\n            this.northEastTile,\n            this.southEastTile,\n            this.southWestTile,\n            this.northWestTile,\n        ].filter(tile => {\n            return tile != undefined;\n        }) as Tile[];\n    }\n}\n","import {Tile} from \"@/puzzles/Tile\";\nimport {Edge} from \"@/puzzles/Edge\";\nimport {Corner} from \"@/puzzles/Corner\";\nimport {PuzzleConfig} from \"@/puzzles/instances/PuzzleConfig\";\nimport {InstanceConfig, TileClue} from \"@/puzzles/instances/InstanceConfig\";\nimport {Cell} from \"@/puzzles/Cell\";\nimport {PuzzleRule} from \"@/puzzles/PuzzleRule\";\n\nexport class Puzzle {\n    // Config\n    puzzleConfig: PuzzleConfig;\n    name: string;\n    description: string;\n\n    // Instance\n    height: number;\n    width: number;\n    gridHeight: number;\n    gridWidth: number;\n\n    rules: PuzzleRule[] = [];\n    grid: Cell[][] = [];\n\n    constructor(instanceConfig: InstanceConfig, puzzleConfig: PuzzleConfig) {\n        // Process puzzleConfig\n        this.puzzleConfig = puzzleConfig;\n        this.name = puzzleConfig.name;\n        this.description = puzzleConfig.description;\n\n        // Add rules\n        if (puzzleConfig.rules) {\n            this.setRules(puzzleConfig.rules);\n        }\n\n        // Initialize grid\n        this.height = instanceConfig.height;\n        this.width = instanceConfig.width;\n\n        this.gridHeight = 2 * this.height + 1;\n        this.gridWidth = 2 * this.width + 1;\n\n        this.initializeGrid();\n\n        // Add clues\n        if (instanceConfig.tileClues) {\n            this.loadTileClues(instanceConfig.tileClues);\n        }\n    }\n\n    private loadTileClues(clues: TileClue[]) {\n        clues.forEach((tileClue: TileClue) => {\n            this.getTile(tileClue.x, tileClue.y).setValue(tileClue.value);\n        })\n    }\n\n    protected initializeGrid(): void {\n        this.grid = [];\n        for (let y = 0; y < this.gridHeight; y++) {\n            const row = [];\n            for (let x = 0; x < this.gridWidth; x++) {\n                if (y % 2 === 0 && x % 2 === 0) {\n                    row.push(new Corner())\n                } else if (y % 2 === 1 && x % 2 === 1) {\n                    row.push(new Tile(this.puzzleConfig.tileValues))\n                } else {\n                    row.push(new Edge(y % 2 === 0))\n                }\n            }\n            this.grid.push(row);\n        }\n\n        // Connect the grid\n        for (let y = 0; y < this.gridHeight; y++) {\n            for (let x = 0; x < this.gridWidth; x++) {\n                if (y % 2 === 0 && x % 2 === 0) {\n                    const corner = this.grid[y][x] as Corner;\n\n                    corner.northEdge = this.getCell(x, y - 1) as Edge;\n                    corner.eastEdge = this.getCell(x + 1, y) as Edge;\n                    corner.southEdge = this.getCell(x, y + 1) as Edge;\n                    corner.westEdge = this.getCell(x - 1, y) as Edge;\n\n                    corner.northEastTile = this.getCell(x + 1, y - 1) as Tile;\n                    corner.southEastTile = this.getCell(x + 1, y + 1) as Tile;\n                    corner.southWestTile = this.getCell(x - 1, y + 1) as Tile;\n                    corner.northWestTile = this.getCell(x - 1, y - 1) as Tile;\n                } else if (y % 2 === 1 && x % 2 === 1) {\n                    const tile = this.grid[y][x] as Tile;\n\n                    tile.northEdge = this.getCell(x, y - 1) as Edge;\n                    tile.eastEdge = this.getCell(x + 1, y) as Edge;\n                    tile.southEdge = this.getCell(x, y + 1) as Edge;\n                    tile.westEdge = this.getCell(x - 1, y) as Edge;\n\n                    tile.northEastCorner = this.getCell(x + 1, y - 1) as Corner;\n                    tile.southEastCorner = this.getCell(x + 1, y + 1) as Corner;\n                    tile.southWestCorner = this.getCell(x - 1, y + 1) as Corner;\n                    tile.northWestCorner = this.getCell(x - 1, y - 1) as Corner;\n                } else {\n                    const edge = this.grid[y][x] as Edge;\n\n                    if (edge.isHorizontal) {\n                        edge.firstTile = this.getCell(x, y - 1) as Tile;\n                        edge.secondTile = this.getCell(x, y + 1) as Tile;\n\n                        edge.firstCorner = this.getCell(x - 1, y) as Corner;\n                        edge.secondCorner = this.getCell(x + 1, y) as Corner;\n\n                    } else {\n                        edge.firstTile = this.getCell(x - 1, y) as Tile;\n                        edge.secondTile = this.getCell(x + 1, y) as Tile;\n\n                        edge.firstCorner = this.getCell(x, y - 1) as Corner;\n                        edge.secondCorner = this.getCell(x, y + 1) as Corner;\n                    }\n\n                }\n            }\n        }\n    }\n\n    public getCell(x: number, y: number): Cell | undefined {\n        if (x < 0 || x >= this.gridWidth || y < 0 || y >= this.gridHeight) {\n            return undefined;\n        } else {\n            return this.grid[y][x];\n        }\n    }\n\n    public setRules(rules: PuzzleRule[]): this {\n        this.rules = rules;\n        return this;\n    }\n\n    public disableRule(id: string): void {\n        const rule = this.rules.find(rule => rule.id === id);\n        if (rule) {\n            const index = this.rules.indexOf(rule);\n            this.rules.splice(index, 1);\n        }\n    }\n\n    public getTile(x: number, y: number): Tile {\n        return this.grid[2 * y + 1][2 * x + 1] as Tile;\n    }\n\n    public getTileEdges(x: number, y: number): Edge[] {\n        return [\n            this.grid[2 * y + 0][2 * x + 1] as Edge,\n            this.grid[2 * y + 2][2 * x + 1] as Edge,\n            this.grid[2 * y + 1][2 * x + 2] as Edge,\n            this.grid[2 * y + 1][2 * x + 0] as Edge,\n        ]\n    }\n\n    public getCorner(x: number, y: number): Corner {\n        return this.grid[2 * y][2 * x] as Corner;\n    }\n\n    isSolved(): boolean {\n        for (const rule of this.rules) {\n            const isSatisfied = rule.isSatisfied({\n                puzzle: this,\n            });\n            if (!isSatisfied) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    toggleEdge(edge: Edge): void {\n        if (edge.isLocked || edge.isDisabled) {\n            return;\n        }\n        edge.toggle();\n    }\n\n    toggleEdgeDisable(edge: Edge): void {\n        if (edge.isLocked || edge.value) {\n            return;\n        }\n        edge.toggleDisabled();\n    }\n\n    toggleCorner(corner: Corner): void {\n        corner.toggle();\n    }\n\n    setTileValue(tile: Tile, number: number): void {\n        tile.setValue(number);\n    }\n\n    getTiles(): Tile[] {\n        const tiles = [];\n        for (let y = 0; y < this.height; y++) {\n            for (let x = 0; x < this.width; x++) {\n                tiles.push(this.getTile(x, y));\n            }\n        }\n        return tiles;\n    }\n\n    getCorners(): Corner[] {\n        const corners = [];\n        for (let y = 0; y < this.height + 1; y++) {\n            for (let x = 0; x < this.width + 1; x++) {\n                corners.push(this.getCorner(x, y));\n            }\n        }\n        return corners;\n    }\n\n    getEdges(): Edge[] {\n        const edges: Edge[] = [];\n        for (let y = 0; y < this.gridHeight; y++) {\n            for (let x = 0; x < this.gridWidth; x++) {\n                if (y % 2 === 0 && x % 2 === 0) {\n                    // Empty\n                } else if (y % 2 === 1 && x % 2 === 1) {\n                    // Empty\n                } else {\n                    edges.push(this.grid[y][x] as Edge)\n                }\n            }\n        }\n        return edges;\n    }\n\n    protected exportTiles(): string {\n        const res = []\n        for (let y = 0; y < this.height; y++) {\n            for (let x = 0; x < this.width; x++) {\n                const tile = this.getTile(x, y);\n                if (tile && Number.isFinite(tile.value)) {\n                    res.push(`(${x} ${y} ${tile.value})`)\n                }\n            }\n        }\n        return res.join(',');\n    }\n\n    protected importTiles(data: string): void {\n        if (!data) {\n            return;\n        }\n        const tuples = data.split(',');\n        const clues: TileClue[] = [];\n        for (let tuple of tuples) {\n            tuple = tuple.replace(\"(\", \"\").replace(\")\", \"\");\n            const values = tuple.split(' ')\n            const x = Number.parseInt(values[0]);\n            const y = Number.parseInt(values[1]);\n            const value = Number.parseInt(values[2]);\n            clues.push({x, y, value})\n        }\n        this.loadTileClues(clues);\n    }\n\n    // TODO(@Isha) make abstract\n    public export(): string {\n        return ''\n    }\n\n    public import(data: string): void {\n        // Empty\n    }\n\n}\n","import {LanguageType} from \"@/language/types/LanguageType\";\n\nexport abstract class AbstractType {\n    abstract type: LanguageType;\n    abstract value: any;\n\n    abstract toString(): string;\n}\n","export enum LanguageType {\n    VOID,\n    NONE,\n    BOOLEAN,\n    NUMBER,\n    STRING,\n}\n","import {AbstractType} from \"@/language/types/AbstractType\";\nimport {LanguageType} from \"@/language/types/LanguageType\";\n\nexport class BooleanType extends AbstractType {\n    type = LanguageType.BOOLEAN;\n    value: boolean;\n\n    constructor(value: boolean) {\n        super();\n        this.value = value;\n    }\n\n    toString(): string {\n        return this.value ? 'True' : 'False';\n    }\n}\n","export enum SlitherlinkRule {\n    TileValueEqualsEdgeCount = 'slitherlink-tile-value-edge-count',\n    EdgeCornerCountIsEven = 'slitherlink-corner-edge-count-is-even',\n    SingleLoop = 'slitherlink-edge-group-count-is-one',\n}\n","import {BooleanType} from \"@/language/types/BooleanType\";\n\nexport class True extends BooleanType {\n    constructor() {\n        super(true);\n    }\n}\n","import {BooleanType} from \"@/language/types/BooleanType\";\n\nexport class False extends BooleanType {\n    constructor() {\n        super(false);\n    }\n}\n","import {StatementId} from \"@/language/StatementId\";\nimport {NoneType} from \"@/language/types/NoneType\";\nimport {Memory} from \"@/language/memory/Memory\";\n\nexport abstract class AbstractStatement {\n    abstract id: StatementId;\n\n    abstract evaluate(memory: Memory): NoneType;\n}\n","import {AbstractStatement} from \"@/language/AbstractStatement\";\nimport {AbstractType} from \"@/language/types/AbstractType\";\nimport {Memory} from \"@/language/memory/Memory\";\n\nexport abstract class AbstractExpression extends AbstractStatement {\n    abstract evaluate(memory: Memory): AbstractType\n}\n","import {AbstractExpression} from \"@/language/AbstractExpression\";\n\nexport abstract class BinaryExpression extends AbstractExpression {\n    left: AbstractExpression;\n    right: AbstractExpression;\n\n    protected constructor(left: AbstractExpression, right: AbstractExpression) {\n        super();\n        this.left = left;\n        this.right = right;\n    }\n\n\n}\n","import {BooleanType} from \"@/language/types/BooleanType\";\nimport {StatementId} from \"@/language/StatementId\";\nimport {True} from \"@/language/types/True\";\nimport {AbstractExpression} from \"@/language/AbstractExpression\";\nimport {Memory} from \"@/language/memory/Memory\";\nimport {False} from \"@/language/types/False\";\nimport {BinaryExpression} from \"@/language/BinaryExpression\";\nimport {Filter} from \"@/language/lists/filters/Filter\";\n\nexport class ForEachTile extends BinaryExpression {\n    id = StatementId.ForEachTile;\n\n    constructor(where: Filter, expr: AbstractExpression) {\n        super(where, expr);\n    }\n\n    evaluate(memory: Memory): BooleanType {\n        let tiles = memory.puzzle.getTiles()\n\n        tiles = tiles.filter(tile => {\n            memory.tile = tile;\n            return this.left.evaluate(memory).value;\n        });\n\n        for (const tile of tiles) {\n            memory.tile = tile;\n\n            const result = this.right.evaluate(memory);\n            if (result.value === false) {\n                return new False();\n            }\n        }\n        return new True()\n    }\n\n}\n","export class LangTypeError extends Error {\n\n}\n","import {BinaryExpression} from \"@/language/BinaryExpression\";\nimport {StatementId} from \"@/language/StatementId\";\nimport {AbstractExpression} from \"@/language/AbstractExpression\";\nimport {BooleanType} from \"@/language/types/BooleanType\";\nimport {LangTypeError} from \"@/language/errors/LangTypeError\";\nimport {Memory} from \"@/language/memory/Memory\";\n\nexport class Eq extends BinaryExpression {\n    id = StatementId.Eq;\n\n    constructor(left: AbstractExpression, right: AbstractExpression) {\n        super(left, right);\n    }\n\n    evaluate(memory: Memory): BooleanType {\n        const left = this.left.evaluate(memory);\n        const right = this.right.evaluate(memory);\n\n        if (left.type != right.type) {\n            throw new LangTypeError(`Cannot compare different types ${left} and ${right}`)\n        }\n        return new BooleanType(left.value === right.value);\n    }\n\n}\n","import {AbstractType} from \"@/language/types/AbstractType\";\nimport {LanguageType} from \"@/language/types/LanguageType\";\n\nexport class NumberType extends AbstractType {\n    type = LanguageType.NUMBER;\n    value: number;\n\n    constructor(value: number) {\n        super();\n        this.value = value;\n    }\n\n    toString(): string {\n        return `${this.value}`;\n    }\n}\n","import {AbstractExpression} from \"@/language/AbstractExpression\";\n\nexport abstract class FunctionExpression extends AbstractExpression {\n\n    protected constructor() {\n        super();\n    }\n}\n","import {FunctionExpression} from \"@/language/functions/FunctionExpression\";\n\nexport abstract class NullaryFunction extends FunctionExpression {\n\n    protected constructor() {\n        super();\n    }\n\n}\n","import {StatementId} from \"@/language/StatementId\";\nimport {NumberType} from \"@/language/types/NumberType\";\nimport {NullaryFunction} from \"@/language/functions/NullaryFunction\";\nimport {Memory} from \"@/language/memory/Memory\";\n\n/**\n * Counts the number of edges a given tile has active.\n */\nexport class TileEdgeCountFunction extends NullaryFunction {\n    id = StatementId.TileEdgeCountFunction;\n\n    constructor() {\n        super();\n    }\n\n    evaluate(memory: Memory): NumberType {\n        const tile = memory.tile;\n\n        if (!tile) {\n            throw new PuzzleDataNotSetError(`Tile not set for ${this.id} function`)\n        }\n\n        let sum = 0;\n        tile.getNeighbouringEdges().forEach(edge => {\n            if (edge.value) {\n                sum++;\n            }\n        })\n\n        return new NumberType(sum);\n    }\n\n}\n","import {StatementId} from \"@/language/StatementId\";\nimport {NumberType} from \"@/language/types/NumberType\";\nimport {NullaryFunction} from \"@/language/functions/NullaryFunction\";\nimport {Memory} from \"@/language/memory/Memory\";\n\n/**\n * Returns the value of the given tile\n */\nexport class TileValueFunction extends NullaryFunction {\n    id = StatementId.TileValueFunction;\n\n    constructor() {\n        super();\n    }\n\n    evaluate(memory: Memory): NumberType {\n        const tile = memory.tile;\n\n        if (!tile) {\n            throw new PuzzleDataNotSetError(`Tile not set for ${this.id} function`)\n        }\n\n        return new NumberType(tile.value);\n    }\n\n}\n","import {NullaryFunction} from \"@/language/functions/NullaryFunction\";\nimport {Memory} from \"@/language/memory/Memory\";\nimport {BooleanType} from \"@/language/types/BooleanType\";\n\nexport abstract class Filter extends NullaryFunction {\n    abstract evaluate(memory: Memory): BooleanType;\n}\n","import {StatementId} from \"@/language/StatementId\";\nimport {Memory} from \"@/language/memory/Memory\";\nimport {Filter} from \"@/language/lists/filters/Filter\";\nimport {BooleanType} from \"@/language/types/BooleanType\";\n\n/**\n * Filters out tiles without a numeric value\n */\nexport class TileHasNumericValueFilter extends Filter {\n    id = StatementId.TileHasNumericValueFilter;\n\n    constructor() {\n        super();\n    }\n\n    evaluate(memory: Memory): BooleanType {\n        const tile = memory.tile;\n\n        if (!tile) {\n            throw new PuzzleDataNotSetError(`Tile not set for ${this.id} function`)\n        }\n\n        return new BooleanType(Number.isFinite(tile.value));\n    }\n\n}\n","import {StatementId} from \"@/language/StatementId\";\nimport {Filter} from \"@/language/lists/filters/Filter\";\nimport {BooleanType} from \"@/language/types/BooleanType\";\nimport {True} from \"@/language/types/True\";\n\n/**\n * Doesn't filter anything\n */\nexport class AllFilter extends Filter {\n    id = StatementId.AllFilter;\n\n    constructor() {\n        super();\n    }\n\n    evaluate(): BooleanType {\n        return new True();\n    }\n\n}\n","import {AbstractType} from \"@/language/types/AbstractType\";\nimport {AbstractExpression} from \"@/language/AbstractExpression\";\n\nexport abstract class AbstractLiteral extends AbstractExpression {\n    type: AbstractType;\n\n    protected constructor(type: AbstractType) {\n        super();\n        this.type = type;\n    }\n\n    public toString(): string {\n        return this.type.toString();\n    }\n\n}\n","import {AbstractLiteral} from \"@/language/literals/AbstractLiteral\";\nimport {StatementId} from \"@/language/StatementId\";\nimport {NumberType} from \"@/language/types/NumberType\";\n\nexport class NumberLiteral extends AbstractLiteral {\n    id = StatementId.NumberLiteral;\n\n    constructor(value = 0) {\n        super(new NumberType(value));\n    }\n\n    evaluate(): NumberType {\n        return this.type;\n    }\n\n\n}\n","import {BooleanType} from \"@/language/types/BooleanType\";\nimport {StatementId} from \"@/language/StatementId\";\nimport {True} from \"@/language/types/True\";\nimport {AbstractExpression} from \"@/language/AbstractExpression\";\nimport {Memory} from \"@/language/memory/Memory\";\nimport {False} from \"@/language/types/False\";\nimport {BinaryExpression} from \"@/language/BinaryExpression\";\nimport {Filter} from \"@/language/lists/filters/Filter\";\n\nexport class ForEachCorner extends BinaryExpression {\n    id = StatementId.ForEachCorner;\n\n    constructor(where: Filter, expr: AbstractExpression) {\n        super(where, expr);\n    }\n\n    evaluate(memory: Memory): BooleanType {\n        let corners = memory.puzzle.getCorners()\n\n        corners = corners.filter(corner => {\n            memory.corner = corner;\n            return this.left.evaluate(memory).value;\n        });\n\n        for (const corner of corners) {\n            memory.corner = corner;\n\n            const result = this.right.evaluate(memory);\n            if (result.value === false) {\n                return new False();\n            }\n        }\n        return new True()\n    }\n\n}\n","import {BinaryExpression} from \"@/language/BinaryExpression\";\nimport {StatementId} from \"@/language/StatementId\";\nimport {AbstractExpression} from \"@/language/AbstractExpression\";\nimport {BooleanType} from \"@/language/types/BooleanType\";\nimport {LangTypeError} from \"@/language/errors/LangTypeError\";\nimport {Memory} from \"@/language/memory/Memory\";\nimport {LanguageType} from \"@/language/types/LanguageType\";\n\nexport class Or extends BinaryExpression {\n    id = StatementId.Or;\n\n    constructor(left: AbstractExpression, right: AbstractExpression) {\n        super(left, right);\n    }\n\n    evaluate(memory: Memory): BooleanType {\n        const left = this.left.evaluate(memory);\n        const right = this.right.evaluate(memory);\n\n        if (left.type != LanguageType.BOOLEAN) {\n            throw new LangTypeError(`Left ${left} is not a boolean`)\n        }\n        if (right.type != LanguageType.BOOLEAN) {\n            throw new LangTypeError(`Right ${right} is not a boolean`)\n        }\n\n        return new BooleanType(left.value || right.value);\n    }\n\n}\n","import {StatementId} from \"@/language/StatementId\";\nimport {NumberType} from \"@/language/types/NumberType\";\nimport {NullaryFunction} from \"@/language/functions/NullaryFunction\";\nimport {Memory} from \"@/language/memory/Memory\";\n\n/**\n * Counts the number of edges a given corner has active.\n */\nexport class CornerEdgeCountFunction extends NullaryFunction {\n    id = StatementId.CornerEdgeCountFunction;\n\n    constructor() {\n        super();\n    }\n\n    evaluate(memory: Memory): NumberType {\n        const corner = memory.corner;\n\n        if (!corner) {\n            throw new PuzzleDataNotSetError(`Corner not set for ${this.id} function`)\n        }\n\n        let sum = 0;\n        corner.getNeighbouringEdges().forEach(edge => {\n            if (edge.value) {\n                sum++;\n            }\n        })\n\n        return new NumberType(sum);\n    }\n\n}\n","import {AbstractExpression} from \"@/language/AbstractExpression\";\nimport {Memory} from \"@/language/memory/Memory\";\n\nexport class PuzzleRule {\n    id: string;\n    description: string;\n    expr: AbstractExpression;\n\n    constructor(id: string, description: string, expr: AbstractExpression) {\n        this.id = id;\n        this.description = description;\n        this.expr = expr;\n    }\n\n    isSatisfied(memory: Memory): boolean {\n        return this.expr.evaluate(memory).value\n    }\n}\n","export enum EdgeClickedAction {\n    ToggleEdgeValue,\n    ToggleEdgeDisabled,\n}\n","export enum TileClickedAction {\n    CycleThroughValues\n}\n","import {StatementId} from \"@/language/StatementId\";\nimport {NumberType} from \"@/language/types/NumberType\";\nimport {NullaryFunction} from \"@/language/functions/NullaryFunction\";\nimport {Memory} from \"@/language/memory/Memory\";\nimport {Edge} from \"@/puzzles/Edge\";\n\n/**\n * Calculate the amount of groups in the edges by performing a floodfill algorithm.\n */\nexport class EdgeGroupCountFunction extends NullaryFunction {\n    id = StatementId.EdgeGroupCountFunction;\n\n    constructor() {\n        super();\n    }\n\n    evaluate(memory: Memory): NumberType {\n        const activeEdges = memory.puzzle.getEdges().filter(edge => {\n            return edge.value === true;\n        });\n\n        let groups = 0;\n\n        const visited: Edge[] = [];\n        while (activeEdges.length > 0) {\n            groups++;\n\n            const queue: Edge[] = [activeEdges.shift() as Edge];\n\n            while (queue.length > 0) {\n                const current: Edge = queue.shift() as Edge;\n\n                const firstNeighbours = current.firstCorner.getActiveNeighbouringEdges();\n                const secondNeighbours = current.secondCorner.getActiveNeighbouringEdges();\n                const neighbours = [...firstNeighbours, ...secondNeighbours];\n\n                for (const neighbour of neighbours) {\n                    if (!visited.includes(neighbour)) {\n                        visited.push(neighbour);\n                        queue.push(neighbour);\n                        const index = activeEdges.indexOf(neighbour);\n                        if (index !== -1) {\n                            activeEdges.splice(index, 1);\n                        }\n                    }\n                }\n\n            }\n\n        }\n\n        return new NumberType(groups);\n    }\n\n}\n","import {Puzzle} from \"@/puzzles/Puzzle\";\nimport {InstanceConfig} from \"@/puzzles/instances/InstanceConfig\";\nimport {ForEachTile} from \"@/language/lists/ForEachTile\";\nimport {Eq} from \"@/language/logic/Eq\";\nimport {TileEdgeCountFunction} from \"@/language/functions/tile/TileEdgeCountFunction\";\nimport {TileValueFunction} from \"@/language/functions/tile/TileValueFunction\";\nimport {TileHasNumericValueFilter} from \"@/language/lists/filters/TileHasNumericValueFilter\";\nimport {AllFilter} from \"@/language/lists/filters/AllFilter\";\nimport {NumberLiteral} from \"@/language/literals/NumberLiteral\";\nimport {ForEachCorner} from \"@/language/lists/ForEachCorner\";\nimport {Or} from \"@/language/logic/Or\";\nimport {CornerEdgeCountFunction} from \"@/language/functions/corner/CornerEdgeCountFunction\";\nimport {PuzzleRule} from \"@/puzzles/PuzzleRule\";\nimport {SlitherlinkRule} from \"@/puzzles/instances/slitherlink/SlitherlinkRule\";\nimport {EdgeGroupCountFunction} from \"@/language/functions/edge/EdgeGroupCountFunction\";\nimport {EdgeClickedAction} from \"@/puzzles/interface/EdgeClickedAction\";\nimport {TileClickedAction} from \"@/puzzles/interface/TileClickedAction\";\n\nexport class Slitherlink extends Puzzle {\n    constructor(instanceConfig: InstanceConfig) {\n        super(instanceConfig,\n            {\n                name: \"Slitherlink\",\n                description: \"The objective is to connect horizontally and vertically adjacent dots so that the lines form a simple loop with no loose ends. In addition, the number inside a square represents how many of its four sides are segments in the loop.\",\n                tileValues: ['', 0, 1, 2, 3],\n                rules: [\n                    new PuzzleRule(SlitherlinkRule.TileValueEqualsEdgeCount, \"The number of edges around a tile must equal the number in the tile\",\n                        new ForEachTile(\n                            new TileHasNumericValueFilter(),\n                            new Eq(new TileEdgeCountFunction(), new TileValueFunction())\n                        ),\n                    ),\n                    new PuzzleRule(SlitherlinkRule.EdgeCornerCountIsEven, \"Each corner must have 0 or 2 connected edges\",\n                        new ForEachCorner(\n                            new AllFilter(),\n                            new Or(\n                                new Eq(new CornerEdgeCountFunction(), new NumberLiteral(0)),\n                                new Eq(new CornerEdgeCountFunction(), new NumberLiteral(2)),\n                            ),\n                        ),\n                    ),\n                    new PuzzleRule(SlitherlinkRule.SingleLoop, \"The path should be a single loop\",\n                        new Eq(new EdgeGroupCountFunction(), new NumberLiteral(1)),\n                    ),\n                ],\n                solvingConfig: {\n                    edgeLeftClicked: EdgeClickedAction.ToggleEdgeValue,\n                    edgeRightClicked: EdgeClickedAction.ToggleEdgeDisabled,\n                },\n                editingConfig: {\n                    edgeLeftClicked: EdgeClickedAction.ToggleEdgeValue,\n                    tileLeftClicked: TileClickedAction.CycleThroughValues,\n                },\n            }\n        );\n    }\n\n    export(): string {\n        return this.exportTiles();\n    }\n\n    import(data: string): void {\n        this.initializeGrid();\n        console.log(\"importing slitherlink\")\n        this.importTiles(data);\n    }\n\n}\n","export enum PuzzleInterfaceMode {\n    Solving = 'Solving',\n    Editing = 'Editing',\n}\n","import {AbstractCommand} from \"@/puzzles/commands/AbstractCommand\";\n\nexport class CommandHistory {\n    private _index = 0;\n    private _commands: AbstractCommand[] = [];\n\n    get index(): number {\n        return this._index;\n    }\n\n    get commands(): AbstractCommand[] {\n        return this._commands;\n    }\n\n    public do(command: AbstractCommand): boolean {\n        if (command.do()) {\n            this.truncateFutureCommands();\n            this._commands.push(command)\n            this._index++;\n            return true;\n        }\n        return false;\n    }\n\n\n    public undo(): boolean {\n        if (this._index === 0) {\n            console.warn('Cannot undo if at start');\n            return false;\n        }\n        const command = this._commands[this._index - 1];\n        if (!command.undo()) {\n            console.warn(`Could not undo command ${command.toString()}`);\n            return false;\n        }\n        this._index--;\n        return true;\n    }\n\n    public redo(): boolean {\n        if (this._index === this._commands.length) {\n            console.warn(\"Cannot redo at the end of list\");\n            return false;\n        }\n        const command = this._commands[this._index];\n        if (!command.do()) {\n            console.warn(`Could not redo command ${command.toString()}`);\n            return false;\n        }\n        this._index++;\n        return true;\n    }\n\n\n    private truncateFutureCommands(): void {\n        if (this._index < this._commands.length) {\n            this._commands.length = this._index\n        }\n    }\n}\n","import {Puzzle} from \"@/puzzles/Puzzle\";\n\nexport abstract class AbstractCommand {\n\n    private _puzzle: Puzzle;\n\n    protected constructor(puzzle: Puzzle) {\n        this._puzzle = puzzle;\n    }\n\n    public abstract do(): boolean;\n\n    public abstract undo(): boolean;\n\n    public abstract toString(): string;\n}\n","import {AbstractCommand} from \"@/puzzles/commands/AbstractCommand\";\nimport {Puzzle} from \"@/puzzles/Puzzle\";\nimport {Edge} from \"@/puzzles/Edge\";\n\nexport class ToggleEdgeCommand extends AbstractCommand {\n    private _edge: Edge;\n\n\n    constructor(puzzle: Puzzle, edge: Edge) {\n        super(puzzle);\n        this._edge = edge;\n    }\n\n    do(): boolean {\n        this._edge.toggle();\n        return true;\n    }\n\n    undo(): boolean {\n        this._edge.toggle();\n        return true;\n    }\n\n    toString(): string {\n        return `Toggle edge`;\n    }\n\n}\n","import {AbstractCommand} from \"@/puzzles/commands/AbstractCommand\";\nimport {Puzzle} from \"@/puzzles/Puzzle\";\nimport {Edge} from \"@/puzzles/Edge\";\n\nexport class ToggleDisableEdgeCommand extends AbstractCommand {\n    private _edge: Edge;\n\n\n    constructor(puzzle: Puzzle, edge: Edge) {\n        super(puzzle);\n        this._edge = edge;\n    }\n\n    do(): boolean {\n        this._edge.toggleDisabled();\n        return true;\n    }\n\n    undo(): boolean {\n        this._edge.toggleDisabled();\n        return true;\n    }\n\n    toString(): string {\n        return `Disable edge`;\n    }\n\n}\n","import {AbstractCommand} from \"@/puzzles/commands/AbstractCommand\";\nimport {Tile} from \"@/puzzles/Tile\";\nimport {Puzzle} from \"@/puzzles/Puzzle\";\n\nexport class CycleThroughTileValuesCommand extends AbstractCommand {\n\n    private _oldValue: any;\n    private _tile: Tile;\n\n\n    constructor(puzzle: Puzzle, tile: Tile) {\n        super(puzzle);\n        this._tile = tile;\n    }\n\n    do(): boolean {\n        this._oldValue = this._tile.value;\n        const index = this._tile.allowedValues.indexOf(this._oldValue);\n        const next = (index + 1) % this._tile.allowedValues.length;\n        const nextValue = this._tile.allowedValues[next];\n        this._tile.setValue(nextValue);\n        return true;\n    }\n\n    undo(): boolean {\n        this._tile.setValue(this._oldValue);\n        this._oldValue = null;\n        return true;\n    }\n\n    toString(): string {\n        return `Rotate tile value`;\n    }\n\n}\n","import {CommandHistory} from \"@/puzzles/commands/CommandHistory\";\nimport {Puzzle} from \"@/puzzles/Puzzle\";\nimport {AbstractCommand} from \"@/puzzles/commands/AbstractCommand\";\nimport {Edge} from \"@/puzzles/Edge\";\nimport {ToggleEdgeCommand} from \"@/puzzles/commands/ToggleEdgeCommand\";\nimport {InterfaceConfig} from \"@/puzzles/interface/InterfaceConfig\";\nimport {EdgeClickedAction} from \"@/puzzles/interface/EdgeClickedAction\";\nimport {ToggleDisableEdgeCommand} from \"@/puzzles/commands/ToggleDisableEdgeCommand\";\nimport {Tile} from \"@/puzzles/Tile\";\nimport {TileClickedAction} from \"@/puzzles/interface/TileClickedAction\";\nimport {CycleThroughTileValuesCommand} from \"@/puzzles/commands/CycleThroughTileValuesCommand\";\nimport {PuzzleInterfaceMode} from \"@/puzzles/PuzzleInterfaceMode\";\n\nexport class PuzzleInterface {\n    puzzle: Puzzle;\n    mode: PuzzleInterfaceMode;\n    commands: CommandHistory;\n    config: InterfaceConfig;\n\n    constructor(puzzle: Puzzle, mode: PuzzleInterfaceMode) {\n        this.puzzle = puzzle;\n        this.mode = mode;\n        this.config = this.loadConfig();\n        this.commands = new CommandHistory();\n    }\n\n    private loadConfig(): InterfaceConfig {\n        return this.mode === PuzzleInterfaceMode.Solving ? this.puzzle.puzzleConfig.solvingConfig : this.puzzle.puzzleConfig.editingConfig;\n    }\n\n    public performEdgeClickAction(edge: Edge, left: boolean): void {\n        const action = left ? this.config.edgeLeftClicked : this.config.edgeRightClicked;\n        switch (action) {\n            case EdgeClickedAction.ToggleEdgeValue:\n                return this.do(new ToggleEdgeCommand(this.puzzle, edge));\n            case EdgeClickedAction.ToggleEdgeDisabled:\n                return this.do(new ToggleDisableEdgeCommand(this.puzzle, edge));\n        }\n    }\n\n    public performTileClickAction(tile: Tile, left: boolean): void {\n        const action = left ? this.config.tileLeftClicked : this.config.tileRightClicked;\n        switch (action) {\n            case TileClickedAction.CycleThroughValues:\n                return this.do(new CycleThroughTileValuesCommand(this.puzzle, tile));\n        }\n    }\n\n    public switchMode(): void {\n        const puzzleData = this.puzzle.export();\n        if (this.mode === PuzzleInterfaceMode.Solving) {\n            this.mode = PuzzleInterfaceMode.Editing;\n        } else {\n            this.mode = PuzzleInterfaceMode.Solving;\n        }\n        this.config = this.loadConfig();\n        this.commands = new CommandHistory();\n        this.import(puzzleData);\n    }\n\n    private do(command: AbstractCommand): void {\n        this.commands.do(command);\n    }\n\n    public undo(): void {\n        this.commands.undo()\n    }\n\n    public redo(): void {\n        this.commands.redo()\n    }\n\n    export(): string {\n        return this.puzzle.export();\n    }\n\n    import(data: string): void {\n        this.puzzle.import(data);\n    }\n}\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\"\n\nconst _hoisted_1 = { class: \"flex flex-row\" }\nconst _hoisted_2 = { class: \"flex flex-col p-4 max-h-96 overflow-y-scroll\" }\nconst _hoisted_3 = { class: \"flex flex-row flex-wrap justify-items-stretch\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"border-2 border-black\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_puzzle_component = _resolveComponent(\"puzzle-component\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createVNode(_component_puzzle_component, {\n        puzzle: _ctx.puzzle,\n        onEdgeLeft: _ctx.edgeLeftClicked,\n        onEdgeRight: _ctx.edgeRightClicked,\n        onTileLeft: _ctx.tileLeftClicked,\n        onTileRight: _ctx.tileRightClicked\n      }, null, 8, [\"puzzle\", \"onEdgeLeft\", \"onEdgeRight\", \"onTileLeft\", \"onTileRight\"]),\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createElementVNode(\"button\", {\n            onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.undo && _ctx.undo(...args))),\n            class: \"btn btn-red\"\n          }, \"Undo\"),\n          _createElementVNode(\"button\", {\n            onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.redo && _ctx.redo(...args))),\n            class: \"btn btn-green\"\n          }, \"Redo\")\n        ]),\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.commands, (command, index) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: command.toString()\n          }, [\n            _createElementVNode(\"p\", null, _toDisplayString(command.toString()), 1),\n            (_ctx.puzzleInterface.commands.index === _ctx.puzzleInterface.commands.commands.length - index-1)\n              ? (_openBlock(), _createElementBlock(\"hr\", _hoisted_4))\n              : _createCommentVNode(\"\", true)\n          ]))\n        }), 128))\n      ])\n    ]),\n    _createElementVNode(\"p\", null, \"Is solved: \" + _toDisplayString(_ctx.isSolved), 1),\n    _createElementVNode(\"button\", {\n      onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.exportPuzzle && _ctx.exportPuzzle(...args))),\n      class: \"btn btn-blue\"\n    }, \"Export!\"),\n    _withDirectives(_createElementVNode(\"input\", {\n      class: \"input-primary\",\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.exportValue) = $event))\n    }, null, 512), [\n      [_vModelText, _ctx.exportValue]\n    ]),\n    _createElementVNode(\"button\", {\n      onClick: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.importPuzzle && _ctx.importPuzzle(...args))),\n      class: \"btn btn-red\"\n    }, \"Import!\"),\n    _createElementVNode(\"button\", {\n      onClick: _cache[5] || (_cache[5] = \n//@ts-ignore\n(...args) => (_ctx.switchMode && _ctx.switchMode(...args))),\n      class: \"btn btn-green\"\n    }, _toDisplayString(_ctx.isSolving ? 'Solving' : 'Editing'), 1)\n  ]))\n}","import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\"\n\nconst _hoisted_1 = { class: \"text-2xl font-semibold\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"text-xl\" }, \"Rules\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1)\nconst _hoisted_6 = { class: \"flex flex-col mx-4\" }\nconst _hoisted_7 = { class: \"list-disc\" }\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_9 = { class: \"flex flex-row justify-center\" }\nconst _hoisted_10 = { class: \"puzzle-container flex flex-col mx-4\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_corner_component = _resolveComponent(\"corner-component\")!\n  const _component_tile_component = _resolveComponent(\"tile-component\")!\n  const _component_edge_component = _resolveComponent(\"edge-component\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: \"w-1/2 bg-gray-400 m-4 p-8 select-none\",\n    onContextmenu: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"prevent\"]))\n  }, [\n    _createElementVNode(\"div\", _hoisted_1, _toDisplayString(_ctx.puzzle.name), 1),\n    _hoisted_2,\n    _createElementVNode(\"p\", null, _toDisplayString(_ctx.puzzle.description), 1),\n    _hoisted_3,\n    _hoisted_4,\n    _hoisted_5,\n    _createElementVNode(\"div\", _hoisted_6, [\n      _createElementVNode(\"ul\", _hoisted_7, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.puzzle.rules, (rule) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: rule.id\n          }, _toDisplayString(rule.description), 1))\n        }), 128))\n      ])\n    ]),\n    _hoisted_8,\n    _createElementVNode(\"div\", _hoisted_9, [\n      _createElementVNode(\"div\", _hoisted_10, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.puzzle.grid, (row, y) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            class: \"flex flex-row\",\n            key: 'row-'+y\n          }, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row, (cell, x) => {\n              return (_openBlock(), _createElementBlock(\"div\", {\n                key: 'cell-'+x+'-'+y\n              }, [\n                (y % 2 === 0 && x % 2 === 0)\n                  ? (_openBlock(), _createBlock(_component_corner_component, {\n                      key: 0,\n                      onCorner: _ctx.cornerClicked,\n                      corner: cell\n                    }, null, 8, [\"onCorner\", \"corner\"]))\n                  : (y % 2 === 1 && x % 2 === 1)\n                    ? (_openBlock(), _createBlock(_component_tile_component, {\n                        key: 1,\n                        onTile: _ctx.tileClicked,\n                        tile: cell\n                      }, null, 8, [\"onTile\", \"tile\"]))\n                    : (_openBlock(), _createBlock(_component_edge_component, {\n                        key: 2,\n                        edge: cell\n                      }, null, 8, [\"edge\"]))\n              ]))\n            }), 128))\n          ]))\n        }), 128))\n      ])\n    ])\n  ], 32))\n}","import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"text-center\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.leftClick && _ctx.leftClick(...args))),\n    onContextmenu: _cache[1] || (_cache[1] = _withModifiers(\n//@ts-ignore\n(...args) => (_ctx.rightClick && _ctx.rightClick(...args)), [\"right\"])),\n    class: \"h-12 w-12 bg-blue-400 flex flex-col justify-center\"\n  }, [\n    _createElementVNode(\"div\", _hoisted_1, _toDisplayString(_ctx.tile.value), 1)\n  ], 32))\n}","\nimport {defineComponent} from 'vue';\nimport {Tile} from \"@/puzzles/Tile\";\n\nexport default defineComponent({\n  name: 'TileComponent',\n  props: {\n    tile: {\n      type: Tile,\n      required: true,\n    }\n  },\n  methods: {\n    leftClick(): void {\n      this.$parent?.$emit('tileLeft', this.tile);\n    },\n    rightClick(): void {\n      this.$parent?.$emit('tileRight', this.tile);\n    },\n  },\n});\n","import { render } from \"./TileComponent.vue?vue&type=template&id=765f38b1&ts=true\"\nimport script from \"./TileComponent.vue?vue&type=script&lang=ts\"\nexport * from \"./TileComponent.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/isha/Documents/development/puzzles/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.leftClick && _ctx.leftClick(...args))),\n    onContextmenu: _cache[1] || (_cache[1] = _withModifiers(\n//@ts-ignore\n(...args) => (_ctx.rightClick && _ctx.rightClick(...args)), [\"right\"])),\n    class: _normalizeClass([_ctx.dimensions + ' ' + _ctx.edgeColor, \"flex flex-row justify-center items-center\"])\n  }, [\n    (_ctx.edge.isDisabled)\n      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, \"x\"))\n      : _createCommentVNode(\"\", true)\n  ], 34))\n}","\nimport {defineComponent} from 'vue';\nimport {Edge} from \"@/puzzles/Edge\";\n\nexport default defineComponent({\n  name: 'EdgeComponent',\n  props: {\n    edge: {\n      type: Edge,\n      required: true,\n    },\n  },\n  computed: {\n    dimensions() {\n      return this.edge.isHorizontal ? 'w-12 h-4' : 'w-4 h-12';\n    },\n    edgeColor() {\n      return this.edge.value ? 'bg-black' : 'bg-gray-300';\n    }\n  },\n  methods: {\n    leftClick(): void {\n      this.$parent?.$emit('edgeLeft', this.edge);\n    },\n    rightClick(): void {\n      this.$parent?.$emit('edgeRight', this.edge);\n    },\n  },\n});\n","import { render } from \"./EdgeComponent.vue?vue&type=template&id=6b1ba373&ts=true\"\nimport script from \"./EdgeComponent.vue?vue&type=script&lang=ts\"\nexport * from \"./EdgeComponent.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/isha/Documents/development/puzzles/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.click && _ctx.click(...args))),\n    class: _normalizeClass('h-4 w-4 ' + _ctx.cornerColor)\n  }, null, 2))\n}","\nimport {defineComponent} from 'vue';\nimport {Corner} from \"@/puzzles/Corner\";\n\nexport default defineComponent({\n  name: 'CornerComponent',\n  props: {\n    corner: {\n      type: Corner,\n      required: true,\n    }\n  },\n  computed: {\n    cornerColor() {\n      return this.corner.value ? 'bg-black' : 'bg-red-400';\n    }\n  },\n  methods: {\n    click(): void {\n      this.$emit('corner', this.corner);\n    }\n  },\n});\n","import { render } from \"./CornerComponent.vue?vue&type=template&id=01eafac6&ts=true\"\nimport script from \"./CornerComponent.vue?vue&type=script&lang=ts\"\nexport * from \"./CornerComponent.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/isha/Documents/development/puzzles/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport {defineComponent} from 'vue';\nimport {Puzzle} from \"@/puzzles/Puzzle\";\nimport TileComponent from \"@/components/TileComponent.vue\";\nimport EdgeComponent from \"@/components/EdgeComponent.vue\";\nimport CornerComponent from \"@/components/CornerComponent.vue\";\nimport {Tile} from \"@/puzzles/Tile\";\nimport {Corner} from \"@/puzzles/Corner\";\n\nexport default defineComponent({\n  name: 'PuzzleComponent',\n  components: {CornerComponent, EdgeComponent, TileComponent},\n  props: {\n    puzzle: {\n      type: Puzzle,\n      required: true,\n    }\n  },\n  data() {\n    return {\n      isSolved: false\n    }\n  },\n  methods: {\n    checkIsSolved() {\n      this.isSolved = this.puzzle.isSolved()\n    },\n    tileClicked(tile: Tile) {\n      this.puzzle.setTileValue(tile, 3);\n      this.checkIsSolved();\n    },\n    cornerClicked(corner: Corner) {\n      this.puzzle.toggleCorner(corner);\n      this.checkIsSolved();\n    }\n  },\n});\n","import { render } from \"./PuzzleComponent.vue?vue&type=template&id=33cd2c24&ts=true\"\nimport script from \"./PuzzleComponent.vue?vue&type=script&lang=ts\"\nexport * from \"./PuzzleComponent.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/isha/Documents/development/puzzles/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport {defineComponent} from 'vue';\nimport {PuzzleInterface} from \"@/puzzles/PuzzleInterface\";\nimport PuzzleComponent from \"@/components/PuzzleComponent.vue\";\nimport {Edge} from \"@/puzzles/Edge\";\nimport {Tile} from \"@/puzzles/Tile\";\nimport {PuzzleInterfaceMode} from \"@/puzzles/PuzzleInterfaceMode\";\n\nexport default defineComponent({\n  name: 'PuzzleInterfaceComponent',\n  components: {PuzzleComponent},\n  props: {\n    puzzleInterface: {\n      type: PuzzleInterface,\n      required: true,\n    }\n  },\n  data() {\n    return {\n      isSolved: false,\n      exportValue: '',\n    }\n  },\n  computed: {\n    isSolving(): boolean {\n      return this.puzzleInterface.mode === PuzzleInterfaceMode.Solving;\n    },\n    isEditing(): boolean {\n      return this.puzzleInterface.mode === PuzzleInterfaceMode.Editing;\n    },\n    puzzle() {\n      return this.puzzleInterface.puzzle\n    },\n    commands() {\n      return this.puzzleInterface.commands.commands.slice().reverse();\n    }\n  },\n  methods: {\n    switchMode() {\n      this.puzzleInterface.switchMode();\n    },\n    undo() {\n      this.puzzleInterface.undo();\n    },\n    redo() {\n      this.puzzleInterface.redo();\n    },\n    exportPuzzle() {\n      if (this.isEditing && !this.isSolved) {\n        alert(\"You can only export solved puzzles\");\n        return;\n      }\n      this.exportValue = this.puzzleInterface.export();\n    },\n    importPuzzle() {\n      this.puzzleInterface.import(this.exportValue);\n    },\n    checkIsSolved() {\n      this.isSolved = this.puzzle.isSolved()\n    },\n    edgeLeftClicked(edge: Edge) {\n      this.puzzleInterface.performEdgeClickAction(edge, true);\n      this.checkIsSolved();\n    },\n    edgeRightClicked(edge: Edge) {\n      this.puzzleInterface.performEdgeClickAction(edge, false);\n      this.checkIsSolved();\n    },\n    tileLeftClicked(tile: Tile) {\n      this.puzzleInterface.performTileClickAction(tile, true);\n      this.checkIsSolved();\n    },\n    tileRightClicked(tile: Tile) {\n      this.puzzleInterface.performTileClickAction(tile, false);\n      this.checkIsSolved();\n    },\n  },\n});\n","import { render } from \"./PuzzleInterfaceComponent.vue?vue&type=template&id=39697b91&ts=true\"\nimport script from \"./PuzzleInterfaceComponent.vue?vue&type=script&lang=ts\"\nexport * from \"./PuzzleInterfaceComponent.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/isha/Documents/development/puzzles/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport {defineComponent} from 'vue';\nimport {Slitherlink} from \"@/puzzles/instances/slitherlink/Slitherlink\";\nimport {PuzzleInterface} from \"@/puzzles/PuzzleInterface\";\nimport {PuzzleInterfaceMode} from \"@/puzzles/PuzzleInterfaceMode\";\nimport PuzzleInterfaceComponent from \"@/components/PuzzleInterfaceComponent.vue\";\n\nexport default defineComponent({\n  name: 'App',\n  components: {\n    PuzzleInterfaceComponent\n  },\n  data() {\n    return {\n      puzzleInterface: new PuzzleInterface(\n          new Slitherlink({\n            width: 5,\n            height: 5,\n          }),\n          PuzzleInterfaceMode.Solving,\n      ),\n    }\n  },\n});\n","import { render } from \"./App.vue?vue&type=template&id=0fa7cef0&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/isha/Documents/development/puzzles/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {createApp} from 'vue'\nimport App from './App.vue'\nimport './index.css'\n\ncreateApp(App).mount('#app')\n"],"sourceRoot":""}